# Generated by Django 4.2.20 on 2025-04-25 21:54

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('Myevol_app', '0007_annualstat_monthlystat_and_more'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='notification',
            options={'ordering': ['-created_at'], 'verbose_name': 'Notification', 'verbose_name_plural': 'Notifications'},
        ),
        migrations.AlterField(
            model_name='badge',
            name='date_obtenue',
            field=models.DateField(auto_now_add=True, db_index=True, help_text='Date à laquelle le badge a été obtenu'),
        ),
        migrations.AlterField(
            model_name='journalmedia',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, help_text='Date de création du média'),
        ),
        migrations.AlterField(
            model_name='journalmedia',
            name='entry',
            field=models.ForeignKey(help_text='Entrée de journal à laquelle ce média est associé', on_delete=django.db.models.deletion.CASCADE, related_name='media', to='Myevol_app.journalentry'),
        ),
        migrations.AlterField(
            model_name='journalmedia',
            name='file',
            field=models.FileField(help_text='Fichier multimédia (image, audio, etc.)', upload_to='journal_media/'),
        ),
        migrations.AlterField(
            model_name='journalmedia',
            name='type',
            field=models.CharField(choices=[('image', 'Image'), ('audio', 'Audio')], help_text='Type de fichier multimédia (image ou audio)', max_length=10),
        ),
        migrations.AlterField(
            model_name='notification',
            name='archived',
            field=models.BooleanField(default=False, help_text='Indique si la notification a été archivée'),
        ),
        migrations.AlterField(
            model_name='notification',
            name='message',
            field=models.TextField(help_text="Contenu textuel de la notification à afficher à l'utilisateur"),
        ),
        migrations.AlterField(
            model_name='notification',
            name='notif_type',
            field=models.CharField(choices=[('badge', 'Badge débloqué'), ('objectif', 'Objectif atteint'), ('statistique', 'Mise à jour statistique'), ('info', 'Information générale')], default='info', help_text='Type de la notification (ex : badge, statistique, info)', max_length=20),
        ),
        migrations.AlterField(
            model_name='notification',
            name='read_at',
            field=models.DateTimeField(blank=True, help_text='Date à laquelle la notification a été lue', null=True),
        ),
        migrations.AlterField(
            model_name='notification',
            name='scheduled_at',
            field=models.DateTimeField(blank=True, help_text='Date programmée pour afficher la notification', null=True),
        ),
        migrations.AlterField(
            model_name='notification',
            name='user',
            field=models.ForeignKey(help_text='Utilisateur concerné par la notification', on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='user',
            name='avatar_url',
            field=models.URLField(blank=True, help_text="URL de l'avatar de l'utilisateur.", null=True),
        ),
        migrations.AlterField(
            model_name='user',
            name='email',
            field=models.EmailField(help_text="Adresse e-mail de l'utilisateur.", max_length=254, unique=True),
        ),
        migrations.AlterField(
            model_name='user',
            name='longest_streak',
            field=models.PositiveIntegerField(default=0, editable=False, help_text='Plus longue série de jours consécutifs.'),
        ),
        migrations.AlterField(
            model_name='user',
            name='xp',
            field=models.PositiveIntegerField(default=0, help_text="Points d'expérience accumulés."),
        ),
    ]
