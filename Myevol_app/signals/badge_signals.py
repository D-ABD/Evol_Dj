import logging
from django.db.models.signals import post_save
from django.dispatch import receiver
from ..services.notification_service import create_user_notification

from ..models import Badge

logger = logging.getLogger(__name__)


@receiver(post_save, sender=Badge)
def notify_user_of_new_badge(sender, instance, created, **kwargs):
    """
    Envoie une notification √† l'utilisateur lorsqu'un nouveau badge lui est attribu√©.

    Ce signal est d√©clench√© automatiquement apr√®s la cr√©ation d'une instance de Badge.
    Une notification de type 'badge' est envoy√©e via le service de notifications.

    Args:
        sender (Model): Le mod√®le d√©clencheur du signal (Badge)
        instance (Badge): L'instance du badge nouvellement cr√©√©e
        created (bool): Indique si l'instance a √©t√© cr√©√©e (True) ou mise √† jour (False)
        **kwargs: Param√®tres suppl√©mentaires du signal
    """
    if created:

        try:
            create_user_notification(
                user=instance.user,
                message=f"üèÖ Nouveau badge d√©bloqu√© : {instance.name}",
                notif_type="badge"
            )
            logger.info(
                f"[NOTIFICATION] Badge '{instance.name}' attribu√© √† {instance.user.username} ‚Äî Notification envoy√©e"
            )
        except Exception as e:
            logger.error(
                f"[NOTIFICATION] ‚ùå Erreur lors de la notification du badge pour {instance.user.username} : {e}"
            )
